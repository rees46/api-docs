# Net Promoter Score

Endpoints is used to work with NPS service.

Glossary:

* Process category: separate process you which quality you want to measure. Examples: `Delivery of online purchase`, `Delivery of offline purchase`, `Online checkout quality`, `Customer service`, etc.
* Channel: channel where review was received from. Examples: `website`, `ios_application`, `pos`, `callcenter`, `android_application`.

## NPS categories

This endpoints returns a list of active categories. Categories list can be customized on NPS settings page in backoffice.

Note: if you provide any of user identifiers (see query params table), questions and "thank you" messages can be personalized.

```shell
curl https://<%= config[:api_endpoint] %>/nps/categories?shop_id=SHOPID
```

```javascript
<%= config[:js_sdk_name] %>('nps', 'categories', success, failure);
```

```swift
// Not described yet
```

```java
// Not described yet
```

> The above command returns JSON structured like this:

```json
[
  {
    "id": 1,
    "code": "website",
    "name": "Online checkout quality",
    "promoter_question": "Which features do you value/use the most?",
    "passive_question": "How can we improve your experience?",
    "detractor_question": "What was missing or disappointing in your experience with us?",
    "promoter_success": "Thanks for your feedback, Mr. John Smith. It’s great to hear that you’re a fan of our product. Your feedback helps us discover new opportunities to improve and make sure you have the best possible experience.",
    "passive_success": "Thanks for your feedback. Our goal is to create the best possible product, and your thoughts, ideas, and suggestions play a major role in helping us identify opportunities to improve.",
    "detractor_success": "Thanks for your feedback. We highly value all ideas and suggestions from our customers, whether they’re positive or critical. In the future, our team might reach out to you to learn more about how we can further improve our services so that it exceeds your expectations."
  },
  {
    "id": 3,
    "code": "delivery",
    "name": "Delivery quality survey",
    "promoter_question": "Which features do you value/use the most?",
    "passive_question": "How can we improve your experience?",
    "detractor_question": "What was missing or disappointing in your experience with us?",
    "promoter_success": "Thanks for your feedback, Mr. John Smith. It’s great to hear that you’re a fan of our product. Your feedback helps us discover new opportunities to improve and make sure you have the best possible experience.",
    "passive_success": "Thanks for your feedback. Our goal is to create the best possible product, and your thoughts, ideas, and suggestions play a major role in helping us identify opportunities to improve.",
    "detractor_success": "Thanks for your feedback. We highly value all ideas and suggestions from our customers, whether they’re positive or critical. In the future, our team might reach out to you to learn more about how we can further improve our services so that it exceeds your expectations."
  }
]
```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/nps/categories`

### Query Parameters

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key. JS SDK handles it automatically.


## NPS channels

Get list of available channels, from which NPS review can be created. Channels list can be customized on NPS settings page in backoffice.

```shell
curl https://<%= config[:api_endpoint] %>/nps/channels?shop_id=SHOPID
```

```javascript
<%= config[:js_sdk_name] %>('nps', 'channels', success, failure);
```

```swift
// Not described yet
```

```java
// Not described yet
```


> The above command returns JSON structured like this:

```json
[
  {
    "id": 1,
    "code": "website",
    "name": "Online checkout quality"
  },
  {
    "id": 2,
    "code": "ios_app",
    "name": "iOS mobile app"
  },
  {
    "id": 3,
    "code": "ios_app",
    "name": "iOS mobile app"
  },
  {
    "id": 4,
    "code": "pos",
    "name": "POS terminal"
  }
]
```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/nps/channels`

### Query Parameters

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key. JS SDK handles it automatically.









## NPS reviews

Get list of published NPS reviews. Limited to 1000 reviews per request.

```shell
curl https://<%= config[:api_endpoint] %>/nps/reviews?shop_id=SHOPID&shop_secret=SECRET
```

```javascript
// Not needed. See cURL.
```

```swift
// Not needed. See cURL.
```

```java
// Not needed. See cURL.
```


> The above command returns JSON structured like this:

```json
[
  {
    "id": 1,
    "channel": "email",
    "category": "delivery",
    "score": 7,
    "comment": "Lorem ipsum",
    "client_id": 1515915625535836508
  },
  {
    "id": 2,
    "channel": "popup",
    "category": "checkout",
    "score": 9,
    "comment": null,
    "client_id": 1515915625535836508
  }
]
```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/nps/reviews`

### Query Parameters

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key.
shop_secret | String | true | Your API secret key.
date_from | String | false | Filter by date: start date.
date_to | String | false | Filter by date: end date.
channel | String | false | Channel code.
category | String | false | Category code.









## Save review


```shell
// Not allowed
```

```javascript
// Full form
<%= config[:js_sdk_name] %>("nps", "review", {
    channel: "channel_code",
    category: "category_code",
    rate: 7,
    comment: "Some comment"
}, success, failure);

// Without comment
<%= config[:js_sdk_name] %>("nps", "review", {
    channel: "channel_code",
    category: "category_code",
    rate: 10
}, success, failure);
```


```swift
// Basic usage
sdk.review(rate: 3, channel: "ios_app", category: "checkout") { _ in
  print("Review is posted")
}

// Rate order
sdk.review(rate: 6, channel: "ios_app", category: "checkout", order_id: "ORDER-3341") { _ in
  print("Review is posted")
}

// With comment
sdk.review(rate: 9, channel: "ios_app", category: "checkout", comment: "Nice application, thank you!") { _ in
  print("Review is posted")
}

// With comment and order_id
sdk.review(rate: 10, channel: "ios_app", category: "checkout", order_id: "ORDER-3341", comment: "Nice application, thank you!") { _ in
  print("Review is posted")
}
```

```java
// Not described yet
```


Create an NPS review for the specific survey and user. To identify user you can use one of the listed identifiers:

- device ID - for web and mobile apps. This ID is used automatically by our SDK.
- email - any channel.
- phone - any channel.
- loyalty ID - any channel, usually POS.
- order ID - any channel, usually POS.

If there is existing review from the same user, channel, category and date, it will be updated instead of creating new one.

<aside class="notice">
If user rated more than one process category, you have to send separate request for each category.
</aside>

### HTTP Request

`POST https://<%= config[:api_endpoint] %>/nps/create`

### Query Parameters

> Response on success:

```json
    {
        "status": "success"
    }
```

> Response on failure:

```json
    {
        "status": "error",
        "payload": {
          "message": "error message"
        }
    }
```

One of the listed user identifiers is required: `did`, `email`, `phone`, `loyalty_id`, `order_id`.

Parameter | Type | Required | Description
--------- | ------- | ------- | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Your secret API key
did | String | false | Device ID of the user. SDK handles it automatically.
seance | true | Temporary user session ID. Required when sending NPS with `did` identifier.
email | String | false | User's email
phone | String | false | User's phone
loyalty_id | String | false | User's loyalty ID
order_id | String | false | Order ID, related to the current survey
channel | String | true | NPS channel code
category | String | true | NPS process category code
rate | Integer | true | Score of the rated process: 1..10
comment | String | false | Optional answer to the follow-up question


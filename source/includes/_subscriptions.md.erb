# Subscriptions

Service provides methods to manage user's subscriptions to email/SMS channels

## Manage subscriptions

### HTTP Request

`POST https://<%= config[:api_endpoint] %>/subscriptions/manage`

### Change user's subscription to different channels and campaigns types

```shell

# Full example
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&phone=+10000000000&email_bulk=true&email_chain=true&email_transactional=true&sms_bulk=true&sms_chain=true&sms_transactional=true" \
https://<%= config[:api_endpoint] %>/subscriptions/manage

# Change only specific subscriptions
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&phone=+10000000000&email_bulk=true&email_chain=true&sms_chain=true&sms_transactional=true" \
https://<%= config[:api_endpoint] %>/subscriptions/manage

# Change without phone
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&email_bulk=true&email_chain=true&sms_chain=true&sms_transactional=true" \
https://<%= config[:api_endpoint] %>/subscriptions/manage

# Change without email
curl -d "shop_id=SHOPID&shop_secret=SECRET&phone=+10000000000&email_bulk=true&email_chain=true&sms_chain=true&sms_transactional=true" \
https://<%= config[:api_endpoint] %>/subscriptions/manage

# Doesn't work, because there is no identifier
curl -d "shop_id=SHOPID&shop_secret=SECRET&email_bulk=true&email_chain=true&sms_chain=true&sms_transactional=true" \
https://<%= config[:api_endpoint] %>/subscriptions/manage
```

```javascript

// Subscribe user to all kids of email campaigns and SMS
<%= config[:js_sdk_name] %>('subscription', 'manage', {
    email: 'my@example.com',
    phone: '+100000000000',
    email_bulk: true,
    email_chain: true,
    email_transactional: true,
    sms_bulk: true,
    sms_chain: true,
    sms_transactional: true
});

// Change only specific subscriptions
<%= config[:js_sdk_name] %>('subscription', 'manage', {
    email: 'my@example.com',
    phone: '+100000000000',
    email_chain: true,
    sms_bulk: true,
    sms_transactional: true
});

// Change without phone
<%= config[:js_sdk_name] %>('subscription', 'manage', {
    email: 'my@example.com',
    email_chain: true,
    sms_bulk: true,
    sms_transactional: true
});

// Change without email
<%= config[:js_sdk_name] %>('subscription', 'manage', {
    phone: '+100000000000',
    email_chain: true,
    sms_bulk: true,
    sms_transactional: true
});

// Change by `did` only
<%= config[:js_sdk_name] %>('subscription', 'manage', {
    email_chain: true,
    sms_bulk: true,
});
```

```swift
// With `did` only
sdk.manageSubscription(bulkEmail: true)

// With email and phone
sdk.manageSubscription(email: "my@example.com", phone: "+10000000000", emailBulk: true, smsBulk: true)

// Unsubscribe from bulk SMS and email
sdk.manageSubscription(emailBulk: false, smsBulk: false)

// With everything
sdk.manageSubscription(email: "my@example.com", phone: "+10000000000",
  emailBulk: true, emailChain: true, emailTransactional: true,
  smsBulk: true, smsChain: true, smsTransactional: true,
  webPushBulk: true, webPushChain: true, webPushTransactional: true,
  mobilePushBulk: true, mobilePushChain: true, mobilePushTransactional: true
  )
```

```java
// No implementation. See CURL
```

The method changes user's subscription to different channels (`email`, `sms`) and campaigns types (`bulk`, `chain`, `transactional`).

Parameter | Type | Required | Description
--------- | ------- | ------- | -----------
shop_id | String | true | Your API key
shop_secret | String | true* | Secret API key. Required only for REST integration.
email | String | true* | User's email
phone | String | true* | User's email
did | String | true* | Users device ID. It's handled automatically on JS SDK and don't needed in REST API
email_bulk | Boolean | false | Subscribe user to email bulk campaigns
email_chain | Boolean | false | Subscribe user to email drip/trigger campaigns
email_transactional | Boolean | false | Subscribe user to email transactional campaigns
sms_bulk | Boolean | false | Subscribe user to SMS bulk campaigns
sms_chain | Boolean | false | Subscribe user to SMS drip/trigger campaigns
sms_transactional | Boolean | false | Subscribe user to SMS transactional campaigns
web_push_bulk | Boolean | false | Subscribe user to Web push bulk campaigns
web_push_chain | Boolean | false | Subscribe user to Web push drip/trigger campaigns
web_push_transactional | Boolean | false | Subscribe user to Web push transactional campaigns
mobile_push_bulk | Boolean | false | Subscribe user to Mobile push bulk campaigns
mobile_push_chain | Boolean | false | Subscribe user to Mobile push drip/trigger campaigns
mobile_push_transactional | Boolean | false | Subscribe user to Mobile push transactional campaigns







## System operations: unsubscribe, complaint, hard bounce and blacklist

This method is used to mark email with specific status.

`POST https://<%= config[:api_endpoint] %>/subscriptions/callback`

### Email is bounced

Use this method only for hard bounces. Don't use it for soft bounce, because it purges email from database forever.

```shell
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&event=hard_bounced" \
https://<%= config[:api_endpoint] %>/subscriptions/callback

# Response:
{"status":  "success"}
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```


Parameter | Type | Required | Description
--------- | ------- | ------- | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key. Required only for REST integration.
email | String | true | User's email
event | String | true | Event to process: `hard_bounced`

### Email is complained

Use this method on FBL request (user marked email as spam):

```shell
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&event=complained" \
https://<%= config[:api_endpoint] %>/subscriptions/callback

# Response:
{"status":  "success"}
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key. Required only for REST integration.
email | String | true | User's email
event | String | true | Event to process: `complained`


### Email is blacklisted

Use this method to add email to black list:

```shell
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&event=blacklisted" \
https://<%= config[:api_endpoint] %>/subscriptions/callback

# Response:
{"status":  "success"}
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key. Required only for REST integration.
email | String | true | User's email
event | String | true | Event to process: `blacklisted`


### Email is unsubscribed

Use this method to unsubscribe email:

```shell
curl -d "shop_id=SHOPID&shop_secret=SECRET&email=my@email.com&event=unsubscribed" \
https://<%= config[:api_endpoint] %>/subscriptions/callback

# Response:
{"status":  "success"}
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key. Required only for REST integration.
email | String | true | User's email
event | String | true | Event to process: `unsubscribed`



## Check subscription status

```shell
curl https://<%= config[:api_endpoint] %>/subscriptions/check
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> Response example

```json
{
    "exists": false,
    "email_bulk": false,
    "email_chain": false,
    "email_transactional": false,
    "email_invalid": false,
    "email_blacklisted": false,
    "email_bounced": false,
    "email_suppressed": false,
    "web_push_bulk": false,
    "web_push_chain": false,
    "web_push_transactional": false,
    "mobile_push_bulk": false,
    "mobile_push_chain": false,
    "mobile_push_transactional": false,
    "sms_bulk": false,
    "sms_chain": false,
    "sms_transactional": false
}
```


Checks email's subscription status.

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key. Can be sent as header `X-Shop-Secret`.
email | String | true* | User's email
phone | String | true* | User's phone.

Response flags:

Property | Type | Description
--------- | -------  | -----------
exists | Boolean | Check if user with specified contact is present in CDP
email_bulk | Boolean | Email is subscribed to bulk emails
email_chain | Boolean | Email is subscribed to drip campaigns (triggers)
email_transactional | Boolean | Email is subscribed to transactional emails
email_invalid | Boolean | Email is invalid or disposal email
email_blacklisted | Boolean | Email is blacklisted (spam trap, etc)
email_bounced | Boolean | Email is hard bounced
email_suppressed | Boolean | Email is suppressed due to complaint
web_push_bulk | Boolean | User has phone and subscribed to bulk Web push campaigns
web_push_chain | Boolean | User has phone and subscribed to drip Web push campaigns (triggers)
web_push_transactional | Boolean | User has phone and subscribed to transactional Web push campaigns
mobile_push_bulk | Boolean | User has phone and subscribed to bulk Mobile push campaigns
mobile_push_chain | Boolean | User has phone and subscribed to drip Mobile push campaigns (triggers)
mobile_push_transactional | Boolean | User has phone and subscribed to transactional Mobile push campaigns
sms_bulk | Boolean | User has phone and subscribed to bulk SMS campaigns
sms_chain | Boolean | User has phone and subscribed to drip SMS campaigns (triggers)
sms_transactional | Boolean | User has phone and subscribed to transactional SMS campaigns



## Changed subscriptions list

This method returns users with changed subscriptions statuses during defined dates range (default 24 hours).

Returns an array of users with email or/and phone, who changed subscriptions status during last 24 hours.

`GET https://<%= config[:api_endpoint] %>/subscriptions/changes`

```shell
curl https://<%= config[:api_endpoint] %>/subscriptions/changes?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> Response example

```json
[
  {
    "contact_type": "email",
    "contact": "email1@example.com",
    "campaign_type": "chain",
    "event": "subscribe",
    "channel": "popup",
    "datetime": "2020-09-24 14:42:36",
    "ip": "192.168.0.1"
  },
  {
    "contact_type": "email",
    "contact": "email2@example.com",
    "campaign_type": "bulk",
    "event": "unsubscribe",
    "channel": "unsubscribe_page",
    "datetime": "2020-09-23 14:43:36",
    "ip": "192.168.2.27"
  },
  {
    "contact_type": "email",
    "contact": "email3@example.com",
    "campaign_type": "bulk",
    "event": "hard_bounced",
    "channel": "email_processing",
    "datetime": "2020-09-23 14:43:36",
    "ip": "192.168.2.27"
  },
  {
    "contact_type": "sms",
    "contact": "+19990009999",
    "campaign_type": "transactional",
    "event": "subscribe",
    "channel": "crm",
    "datetime": "2020-09-25 14:43:36",
    "ip": "192.168.2.27"
  },
  ...
]
```

### Parameters

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key.
shop_secret | String | true | Secret API key. Can be sent as header `X-Shop-Secret`.
event | String | false | Filter by event.
channel | String | false | Filter by channel.
from | String | false | Date `from` in `YYYY-MM-DD` format. Default value: 1 day ago.
to | String | false | Date `to` in `YYYY-MM-DD` format. Default value: current date.
email | String | false | Find only logs with specified email.
phone | String | false | Find only logs with specified phone.


### Response properties

Parameter | Type | Description
--------- | -------  | -----------
contact_type | String | Type of contact: `sms`, `email`, `mpush`, `wpush`
contact | String | Contact value
campaign_type | String | Type of campaigns: `bulk`, `chain`, `transactional`, `everything`
event | String | Type of event: `subscribe`, `unsubscribe`, `hard_bounced`, `complained`, `blacklisted`
channel | String | Channel of event: `api`, `js_sdk`, `unsubscribe_page`, `email_processing`, etc
datetime | String | Date and time in `YYYY-MM-DD H:i:s` format
ip | String | IP from where request was received. Can be empty for some kinds of `channel` parameter.

### Event descriptions:

| Event | Description |
| --- | --- |
| subscribe | User is subscribed for messages (email, sms) |
| unsubscribe | User is unsubscribed |
| hard_bounced | User's contact is hard bounced (not existing email, phone) |
| complained | User is complained (FBL). As result: unsubscribed and suppressed |
| blacklisted | User is blacklisted |

### Channel descriptions

| Event | Description |
| --- | --- |
|email_feedback_processing| Mailing feedback processing (FBL, bounce worker, automatic unsubscribe) |
|api| Log from `subscriptions/manage` method |
|api_callback| Log from `subscriptions/callback` method |
|js_sdk| Event from JS SDK. Reserved |
|mobile_sdk| Event from Mobile SDK. Reserved |
|push_attributes| Event from `event/push_attributes` method. Deprecated |
|auto_collector| Event from `auto_collector` service |
|popup| Subscription from pop-up |
|import| Subscription from audience import |
|crm| Subscription management in CRM UI |
|bulk_sending| Automatic bounce worker while sending bulk mailing |
|transactional_sending| Automatic bounce worker while sending transactional mailing |
|unsubscribe_page| User clicked on "unsubscribe" link in email sent by <%= config[:service_name] %> |
|resubscribe_page|  User clicked on "re-subscribe" link on <%= config[:service_name] %>'s "unsubscribe" page |


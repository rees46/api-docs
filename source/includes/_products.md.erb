# Products and catalog

Service is used to manage products and categories.

## Request product list

```shell
# Basic
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...

# Filter by brands
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&brands=BRAND_1,BRAND_2

# Filter by categories
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&categories=CATEGORY_1,CATEGORY_2

# Filter by locations
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&locations=LOCATION_1,LOCATION_2

# Filter by merchants
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&merchants=MERCHANT_1,MERCHANT_2

# Filter by params
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&filters={"PARAM_NAME_1": ["PARAM_VALUE_1", "PARAM_VALUE_2"], "PARAM_NAME_2": ["PARAM_VALUE_1", "PARAM_VALUE_2"]}

# Filter by true|false params. Send boolean params as string
curl https://<%= config[:api_endpoint] %>/products?shop_id=...&did=...&sid=...&filters={"PARAM_NAME_1": ["true"], "PARAM_NAME_2": ["false"]}

```

```javascript
// No implementation. See CURL
```

```swift
sdk.getProductsList(
  brands: String?,
  merchants: String?,
  categories: String?,
  locations: String?,
  limit: Int?,
  page: Int?,
  filters: [String : Any]?
) {
  Result<ProductsListResponse,
  SDKError> in //productsListResponse in // Result response
}
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/products`

### Query Parameters

| Parameter             | Required | Description                                                                                                                          |
|-----------------------|----------|--------------------------------------------------------------------------------------------------------------------------------------|
| did                   | true     | Device ID. You get it from `init` method in SDK.                                                                                     |
| shop_id               | true     | Your API key                                                                                                                         |
| sid                   | true     | Temporary user session ID                                                                                                            |
| limit                 | false    | Limit of results                                                                                                                     |
| page                  | false    | Page of results                                                                                                                      |
| locations             | false    | Comma separated list of locations IDs                                                                                                |
| brands                | false    | Comma separated list of brands to filter                                                                                             |
| merchants             | false    | Comma separated list of merchants to filter                                                                                          |
| categories            | false    | Comma separated list of categories to filter                                                                                         |
| filters               | false    | Optional escaped JSON string with filter parameters. For example: `{"bluetooth":["yes"],"offers":["15% cashback"],"weight":["1.6"]}` |
| filters_search_by     | false    | Available options for filter: name, quantity, popularity                                                                             |


### API response
| Name           | Type             | Description                                                                                                                                                                                           |
|:---------------|:-----------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| brands         | array            | Array with information about brands. Each object has the following properties:                                                                                                                        |
|                |                  | * name – brand name (string)                                                                                                                                                                          |
|                |                  | * picture – brand picture (string)                                                                                                                                                                    |
|                |                  | * count - the number of matches (number)                                                                                                                                                              |
|                |                  |                                                                                                                                                                                                       |
| categories     | array of objects | Array contains objects with following fields:                                                                                                                                                         |
|                |                  | * id - category id (string)                                                                                                                                                                           |
|                |                  | * name - category name (string)                                                                                                                                                                       |
|                |                  | * url - category URL (string)                                                                                                                                                                         |
|                |                  | * url_handle - path to the category (string)                                                                                                                                                          |
|                |                  | * count - number of products in the category (number)                                                                                                                                                 |
|                |                  | * parent - parent's category id (string)                                                                                                                                                              |
|                |                  | * alias - alternate category name (string)                                                                                                                                                            |
|                |                  |                                                                                                                                                                                                       |
| filters        | array            | Array with information about filters. Each object has the following properties:                                                                                                                       |
|                |                  | * filter – filter object. Has the following properties:                                                                                                                                               |
|                |                  | * count – total count of products with this parameters (number).                                                                                                                                      |
|                |                  | * priority - priority of the filter (number).                                                                                                                                                         |
|                |                  | * ranges - ranges of numeric values for aggregation results (number).                                                                                                                                 |
|                |                  | * values – array of values (object). Has the following properties:                                                                                                                                    |
|                |                  | * value – value label. (string)                                                                                                                                                                       |
|                |                  | * count – cont of products with this parameter (number)                                                                                                                                               |
|                |                  |                                                                                                                                                                                                       |
| price_range    | object           | Min and max price of products. Has the following properties:                                                                                                                                          |
|                |                  | * min – min price (number)                                                                                                                                                                            |
|                |                  | * max – max price (number)                                                                                                                                                                            |
| products       | array            | Array with information about products. Each object has the following properties:                                                                                                                      |
|                |                  | * brand – product brand (string)                                                                                                                                                                      |
|                |                  | * currency – product currency (string, corresponds to the currency of the personal account in <%= config[:service_name] %>, or a custom value specified in the shop settings in the personal account) |
|                |                  | * id – product ID (string)                                                                                                                                                                            |
|                |                  | * is_new – product property (boolean, default - null)                                                                                                                                                 |
|                |                  | * name – product name (string)                                                                                                                                                                        |
|                |                  | * old_price – product old price (string, default - 0)                                                                                                                                                 |
|                |                  | * price – product price (number)                                                                                                                                                                      |
|                |                  | * price_formatted – product price with currency (string)                                                                                                                                              |
|                |                  | * price_full_formatted – product price, example: "547.67 $" (string)                                                                                                                                  |
|                |                  | * picture – product's picture URL in the <%= config[:service_name] %> storage (string)                                                                                                                |
|                |                  | * url – product URL (string)                                                                                                                                                                          |
|                |                  | * description – product description (string)                                                                                                                                                          |
|                |                  | * category_ids – id of categories that product belongs to (array of strings)                                                                                                                          |
|                |                  | * fashion_feature - feature of fashion category, for example "for kids" or "adult" (string)                                                                                                           |
|                |                  | * fashion_gender - gender of product`s auditory (string)                                                                                                                                              |
|                |                  | * sales_rate – number of sales of this product (integer)                                                                                                                                              |
|                |                  | * relative_sales_rate – relative share of sales represented in percents (integer)                                                                                                                     |
|                |                  | * image_url - URL to the original image of the product (string)                                                                                                                                       |
|                |                  | * image_url_handle – path to the image (string)                                                                                                                                                       |
|                |                  | * image_url_resized – object with keys represent the size pf image, values are paths to image                                                                                                         |
|                |                  | * _id – internal id (string)                                                                                                                                                                          |
|                |                  | * group_id - id of the group that has products of the same category aggregated into (string)                                                                                                          |
|                |                  |                                                                                                                                                                                                       |
|                |                  | * barcode – product barcode (string)                                                                                                                                                                  |
|                |                  | * categories – product categories (array). Has the following properties:                                                                                                                              |
|                |                  | * id – category id (string)                                                                                                                                                                           |
|                |                  | * name – category name (string)                                                                                                                                                                       |
|                |                  | * parent – parent category id (string)                                                                                                                                                                |
|                |                  | * params – array with information about params. Each object has the following properties:                                                                                                             |
|                |                  | * key – param name (string)                                                                                                                                                                           |
|                |                  | * values – array of values (array)                                                                                                                                                                    |
|                |                  |                                                                                                                                                                                                       |
| products_total | number           | Total count of products                                                                                                                                                                               |
| price_ranges   | array of objects | objects contain fields 'to' and 'count' that represent upper limit of the price range and the number of products in range                                                                             |
| price_median   | number           | median price of products                                                                                                                                                                              |


## Get product info

```shell
curl https://<%= config[:api_endpoint] %>/products/get?shop_id=...&item_id=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> REST method returns this JSON structure

```json
{
  "name": "...",
  "description": "...",
  "price": "...",
  "currency": "...",
  "url": "...",
  "picture": "..."
}
```

Returns basic product info.

`GET https://<%= config[:api_endpoint] %>/products/get`

### Query Parameters

| Parameter | Type   | Required   | Description  |
|-----------|--------|------------|--------------|
| shop_id   | String | true       | Your API key |
| item      | String | true       | Product ID   |

## Get product stats

```shell
curl https://<%= config[:api_endpoint] %>/products/counters?shop_id=...&item=...
```

```javascript
<%= config[:js_sdk_name] %>('products', 'counters', ITEM, success, error)
```

```swift
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> REST method returns this JSON structure

```json
{
  "daily": {
    "view": 123,
    "cart": 456,
    "purchase": 789
  },
  "now": {
    "view": 123,
    "cart": 456,
    "purchase": 789
  }
}
```

Returns basic product info.

`GET https://<%= config[:api_endpoint] %>/products/counters`

### Query Parameters

| Parameter | Type   | Required   | Description  |
|-----------|--------|------------|--------------|
| shop_id   | String | true       | Your API key |
| item_id   | String | true       | Product ID   |

## Get subscriptions for products in stock

```shell
curl https://<%= config[:api_endpoint] %>/products/subscribers/stock?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> REST method returns this JSON structure

```json
[
  {
    "id": "ID1",
    "barcode": "BC101",
    "quantity": 337,
    "date": "2020-01-12",
    "contacts": [
      "email@email.com",
      "email@email.com"
    ]
  },
  {
    "id": "ID2",
    "barcode": "BC102",
    "quantity": 13,
    "date": "2020-08-11",
    "contacts": [
      "email@email.com",
      "email@email.com"
    ]
  }
]
```

Returns list of products and a number of subscribers for each product in stock.

`GET https://<%= config[:api_endpoint] %>/products/subscribers/stock`

### Query Parameters

| Parameter     | Type      | Required   | Description       |
|---------------|-----------|------------|-------------------|
| shop_id       | String    | true       | Your API key      |
| shop_secret   | String    | true       | Shop secret key   |

### Response details

| Parameter     | Type    | Description                           |
|---------------|---------|---------------------------------------|
| id            | String  | Product ID                            |
| barcode       | String  | Product barcode                       |
| subscribers   | Integer | Number of subscribers for the product |
| date          | String  | Date of the last subscription         |



## Get subscriptions for products price drop

```shell
curl https://<%= config[:api_endpoint] %>/products/subscribers/price?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> REST method returns this JSON structure

```json
[
  {
    "id": "ID1",
    "barcode": "BC101",
    "quantity": 337,
    "date": "2020-01-12",
    "contacts": [
      "email@email.com",
      "email@email.com"
    ]
  },
  {
    "id": "ID2",
    "barcode": "BC102",
    "quantity": 13,
    "date": "2020-08-11",
    "contacts": [
      "email@email.com",
      "email@email.com"
    ]
  }
]
```

Returns list of products and a number of subscribers for each product's price drop.

`GET https://<%= config[:api_endpoint] %>/products/subscribers/price`

### Query Parameters

| Parameter   | Type   | Required   | Description     |
|-------------|--------|------------|-----------------|
| shop_id     | String | true       | Your API key    |
| shop_secret | String | true       | Shop secret key |

### Response details

| Parameter    | Type    | Description                           |
|--------------|---------|---------------------------------------|
| id           | String  | Product ID                            |
| barcode      | String  | Product barcode                       |
| subscribers  | Integer | Number of subscribers for the product |
| date         | String  | Date of the last subscription         |


## Get status of subscription for "Back in Stock" trigger

```shell
// No implementation. See JavaScript
```

```javascript
<%= config[:js_sdk_name] %>("check_trigger", "product_price_decrease", params, success, error);
```

```swift
// No implementation. See JavaScript
```

```kotlin
// No implementation. See JavaScript
```

```java
// No implementation. See JavaScript
```

> API method returns this boolean status


Returns boolean status of subscription.


### Query Parameters

| Parameter | Type     | Required | Description                                                                                |
|-----------|----------|----------|--------------------------------------------------------------------------------------------|
| params    | Object   | true     |  Object with request parameters.                                                           |
| success   | Function | true     | Callback-function, where the API response will be passed to. Response type: object.        |
|  error    | Function | false    | Callback-function to be called when an error occurs (any HTTP status code other than 200). |

### Request parameters

| Parameter   | Type          | Required | Description                          |
|-------------|---------------|----------|--------------------------------------|
| item        | string/number | true     | Product ID                           |
| email       | string 	      | false    | Email for subscription checking      |
| phone       | string 	      | false    | Phone for subscription checking      |
| loyalty_id  | string 	      | false    | Loyalty ID for subscription checking |

<aside class="notice">
If no *email*, *phone*, or *loyalty_id* is specified, only the user's current device will be checked. It won't take into account subscriptions performed on the user's other devices.
</aside>


## Get status of subscription for product price drop

```shell
// No implementation. See JavaScript
```

```javascript
<%= config[:js_sdk_name] %>("check_trigger", "product_available", params, success, error);
```

```swift
// No implementation. See JavaScript
```

```kotlin
// No implementation. See JavaScript
```

```java
// No implementation. See JavaScript
```

> API method returns this boolean status


Returns boolean status of subscription.


### Query Parameters

| Parameter | Type     | Required | Description                                                                                |
|-----------|----------|----------|--------------------------------------------------------------------------------------------|
| params    | Object   | true     | Object with request parameters.                                                            |
| success   | Function | true     | Callback-function, where the API response will be passed to. Response type: object.        |
|  error    | Function | false    | Callback-function to be called when an error occurs (any HTTP status code other than 200). |

### Request parameters

| Parameter   | Type          | Required | Description                          |
|-------------|---------------|----------|--------------------------------------|
| item        | string/number | true     | Product ID                           |
| email       | string        | false    | Email for subscription checking      |
| phone       | string        | false    | Phone for subscription checking      |
| loyalty_id  | string        | false    | Loyalty ID for subscription checking |

<aside class="notice">
If no *email*, *phone*, or *loyalty_id* is specified, only the user's current device will be checked. It won't take into account subscriptions performed on the user's other devices.
</aside>


## List not widgetable products

```shell
curl https://<%= config[:api_endpoint] %>/products/not_widgetable?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See shell
```

```swift
// No implementation. See shell
```

```kotlin
// No implementation. See shell
```

```java
// No implementation. See shell
```

> API method returns a list like this:

```
{
  "status": "success",
  "data": {
    "items": [
      { "uniqid": "YOUR_SKU", "name": "...", "url": "...", "image_url": "", "price": ..., "image_downloading_error": "..."},
      { "uniqid": "YOUR_SKU", "name": "...", "url": "...", "image_url": "", "price": ..., "image_downloading_error": "..."},
    ]
  }
}
```

Returns a list of `avaiable` and `not ignored` products which are not `widgetable`: can't be displayed in search, recommendations and messages due to missing one of mandatory parameters (`name`, `price`, `url` or `image_url`) or failed to fetch product's photo during import operation.


## Get client's shopping cart

Shopping cart can be fetched with `did` (device ID) parameter only.

```shell

# By did
curl 'https://<%= config[:api_endpoint] %>/products/cart?did=DEVICE_ID&shop_id=SHOP_ID'
```

```javascript

function success ({ data })  {
  console.log(data.items.length);
});

function failure (error) {
  console.error(error);
})

window.<%= config[:js_sdk_name] %>('cart', 'get', success, failure);

```

```kotlin
// Not implemented yet.
```

```java
// Not implemented yet.
```

```swift
sdk.getProductsFromCart { result in
  switch result {
    case .success(let items):
      print("cart items: \n \(items)")
    case .failure(let error):
      print("error: \(error)")
  }
}
```

```jsx
 cart() {
    return new Promise((resolve, reject) => {
      this.push((() => {
        try {
          request('products/cart', {
            params: {
              shop_id: this.shop_id,
            },
          }).then( res => {
            resolve(res)
          });
        } catch (error) {
          reject(error)
        }
      }));
    })
  }

```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/products/cart`

### Query Parameters

| Parameter | Required | Description         |
|-----------|----------|---------------------|
| shop_id   | true     | Your API key        |
| did       | true     | Device ID           |


### API response

Returns `{"status": "success", "data": { "items": [ {"uniqid": "SKU_1", "quantity": 1}, {"uniqid": "SKU_2", "quantity": 3} ] }}` JSON object.

##


## Clear client's shopping cart

```shell

# By phone number
curl --location --request DELETE 'https://<%= config[:api_endpoint] %>/products/cart/clear?phone=PHONE&shop_id=SHOP_ID&shop_secret=SHOP_SECRET'

# By phone email
curl --location --request DELETE 'https://<%= config[:api_endpoint] %>/products/cart/clear?email=EMAIL&shop_id=SHOP_ID&shop_secret=SHOP_SECRET'

# By loyalty_id
curl --location --request DELETE 'https://<%= config[:api_endpoint] %>/products/cart/clear?loyalty_id=LOYALTY_ID&shop_id=SHOP_ID&shop_secret=SHOP_SECRET'

# By external_id
curl --location --request DELETE 'https://<%= config[:api_endpoint] %>/products/cart/clear?external_id=EXTERNAL_ID&shop_id=SHOP_ID&shop_secret=SHOP_SECRET'

# By telegram_id
curl --location --request DELETE 'https://<%= config[:api_endpoint] %>/products/cart/clear?telegram_id=TELEGRAM_ID&shop_id=SHOP_ID&shop_secret=SHOP_SECRET'

```

```javascript
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

### HTTP Request

`DELETE https://<%= config[:api_endpoint] %>/products/cart/clear`

### Query Parameters

| Parameter    | Required | Description         |
|--------------|----------|---------------------|
| shop_id      | true     | Your API key        |
| shop_secret  | true     | Your API secret key |
| email*       | true     | User's email        |
| phone*       | true     | User's phone number |
| loyalty_id*  | true     | User's loyalty_id   |
| external_id* | true     | User's external_id  |
| telegram_id* | true     | User's telegram_id  |

<aside class="notice">
At least of identifiers (marked by *) must present in request: email, phone, etc. It's used to identify user.
</aside>


### API response

Returns `{"status": "success"}` JSON object.

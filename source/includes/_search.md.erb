# Search

Service provides 2 types of search: instant (typeahead) and full search.

## Instant search

```swift
// Instant search
sdk.suggest(query: "ipho") { searchResult in
  print("Suggest callback")
}
```


### HTTP Request

`GET https://<%= config[:api_endpoint] %>/search`

### Query Parameters

Parameter | Required | Description
--------- | ------- | -----------
did | true | Device ID. You get it from `init` method in SDK.
shop_id | true | Your API key
seance | true | Temporary user session ID
type | true | In this case: "instant_search"
search_query | true | Search query

## Full search

```swift
// Basic full search
sdk.search(query: "iphone") { searchResult in
  print("Full search callback")
}

// Full search with additional parameters
sdk.search(query: "laptop", limit: nil, offset: nil, categoryLimit: nil, categories: nil, extended: nil, sortBy: nil, sortDir: nil, locations: nil, brands: nil, filters: nil, priceMin: nil, priceMax: nil, colors: nil, exclude: nil) { searchResult in
  print("Full search callback")
}
```

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/search`

### Query Parameters

Parameter | Required | Description
--------- | ------- | -----------
did | true | Device ID. You get it from `init` method in SDK.
shop_id | true | Your API key
seance | true | Temporary user session ID
type | true | In this case: "full_search"
search_query | true | Search query
limit | false | Limit of results
offset | false | Offset of results
category_limit | false | How many categories for sidebar filter to return
categories | false | Comma separated list of categories to filter
extended | false | It's better to use `true` for full search results
sort_by | false | Sort by parameter: `popular`, `price`, `discount`
sort_dir | false | Sort direction: `asc` or `desc` (default)
locations | false | Comma separated list of locations IDs
brands | false | Comma separated list of brands to filter
filters | false | Optional escaped JSON string with filter parameters. For example: `{"bluetooth":["yes"],"offers":["15% cashback"],"weight":["1.6"]}`
price_min | false | Min price
price_max | false | Max price
colors | false | Comma separated list of colors
exclude | false | Comma separated list of products IDs to exclude from search results
email | false | It's only for S2S integration, when service doesn't have user's session. Mobile SDK doesn't use it.
no_clarification | false | Disable clarified search (true, false, default: false). Don't use it. God mode only.






## Search queries with zero results

This method returns a list of queries which return zero results and number of usages of this queries during previous 2 weeks.

For server-to-server integration only.

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/search/no_result_queries`

```shell
curl https://<%= config[:api_endpoint] %>/search/no_result_queries?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> Response example

```json
[
  {
    "query": "iphone 4s",
    "quantity": 3844
  },
  {
    "contact_type": "covfefe",
    "quantity": 384491
  },
  ...
]
```

### Parameters

Parameter | Type | Required | Description
--------- | ------- | -------  | -----------
shop_id | String | true | Your API key
shop_secret | String | true | Secret API key

### Response properties

Parameter | Type | Description
--------- | -------  | -----------
query | String | Search query value
quantity | Integer | Number of query usages during 2 weeks

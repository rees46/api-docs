# Search

Service provides 2 types of search: instant (typeahead) and full search.

<aside class="warning">
There is a response limit: a response can contain no more than ten thousand items, even if the request found more products
</aside>

## Instant search

```javascript
/*
- did: Unique device identifier. Obtained from the SDK init method.
- shop_id: API key used for authorization.
- sid: Temporary user session ID.
- type: Request type. For instant search use "instant_search".
- search_query: The search query entered by the user.
- locations: Comma-separated list of location IDs. Limits the search to the specified locations.
- search_scope: Whitelist of parameters (comma-separated) to be used in search. If empty, all common parameters are included by default.
- excluded_merchants: Comma-separated list of merchants whose products should be excluded. Works only together with merchants in the locations field.
- excluded_brands: List of brands in lowercase to be excluded from search. Example: ["samsung", "hp"].
- collapse: If set to false, products with the same group_id will not be collapsed and will appear separately in search results.
*/

<%= config[:js_sdk_name] %>("suggest", {
  did: "DID",
  shop_id: "SHOP_ID",
  sid: "SID",
  type: "instant_search",
  search_query: "electronics",
  locations: ["location1", "location2"],
  excluded_merchants: ["merchant1,merchant2"],
  excluded_brands: ["samsung", "hp"],
  collapse: false
}, function(response) {
  // handle the response: for example, render instant search results
}, function(error) {
  // handle the error: logging or showing a message to the user
});

```
```swift
// Instant search
sdk.suggest(query: "ipho") { searchResult in
  print("Suggest callback")
}

/**

Search for merchants in locations.

To exclude merchants from the search results, use `excludedMerchants`.

excludedMerchants - an array of merchants to be excluded from the search results.

locations - locations where the search for merchants occurs.
**/

sdk?.search(
  query: "search-query",
  locations: "location",
  excludedMerchants: ["excluded-merchant"]
) { result in
    switch result {
    case .success(let response):
      print(response.productsTotal)
    case .failure(let error):
      print(error.description)
  }
}

sdk?.suggest(
  query: "search-query",
  locations: "location",
  excludedMerchants: ["excluded-merchant"]
) { result in
    switch result {
    case .success(let response):
      print(response.productsTotal)
    case .failure(let error):
      print(error.description)
  }
}

/**

Brand exclusion

To exclude brands from the search results, use `excludedBrands`.

excludedBrands – an array of brand names that should be excluded from search results.

**/

sdk?.search(
    query: "powder bronzer",
    excludedBrands: ["dior", "estee lauder"]
) { result in
    switch result {
    case .success(let response):
        print(response.productsTotal)
    case .failure(let error):
        print(error.description)
    }
}

sdk?.suggest(
    query: "powder bronzer",
    excludedBrands: ["dior", "estee lauder"]
) { result in
    switch result {
    case .success(let response):
        print(response.productsTotal)
    case .failure(let error):
        print(error.description)
    }
}

```
```java
//Instant search
SearchParams params = new SearchParams();
params.put(SearchParams.Parameter.LOCATIONS, "location");
<%= config[:android_sdk_package_name]%>.search("SEARCH_QUERY", SearchParams.TYPE.INSTANT, params, new Api.OnApiCallbackListener() {
    @Override
    public void onSuccess(JSONObject response) {
        Log.i(TAG, "Search response: " + response.toString());
    }
});
//Search blank request
<%= config[:android_sdk_package_name]%>.search_blank(new Api.OnApiCallbackListener() {
    @Override
    public void onSuccess(JSONObject response) {
        Log.i(T.TAG, "Search response: " + response.toString());
    }
});
```
```kotlin
//Instant search
sdk.searchManager.searchInstant("SEARCH_QUERY", "locations", { searchInstantResponse ->
    Log.i(TAG, "Search instant response: $searchInstantResponse")
})
//Search blank request
sdk.searchManager.searchBlank({ searchBlankResponse ->
    Log.i(TAG, "Search blank response: $searchBlankResponse")
})

/**

Brand exclusion

query - search query value
excludedBrands - list of brands to be excluded
onSearchInstant - callback that is triggered when the search is completed

**/

sdk.searchManager.searchInstant(
  query = "powder bronzer",
  excludedBrands = listOf("dior", "estee lauder"),
  nSearchInstant = {
    Log.d("INSTANT SEARCH EXCLUDE BRANDS", it.productsTotal.toString())
  }
)
```
```jsx
const type = 'instant_search';
let search_query = 'your_search_text';
sdk.search({
  type: type,
  search_query: search_query,
  // other params
})
  .then((res) => {
    console.log(res);
  })
  .catch((error) => {
    console.log(error);
  });

// Blank request search
sdk.searchBlank()
// The request is sent to the endpoint 'search/blank'.
.then((res) => {
  console.log(res);
})
.catch((error) => {
  console.log(error);
});
```

### HTTP Request

// No implementation is needed in HTTP

### Query Parameters

| Parameter           | Required | Description                                                                                                                                                                                                                                                                                     |
|---------------------|----------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| did                 | true     | Device ID. You get it from `init` method in SDK.                                                                                                                                                                                                                                                |
| shop_id             | true     | Your API key.                                                                                                                                                                                                                                                                                   |
| sid                 | true     | Temporary user session ID.                                                                                                                                                                                                                                                                      |
| type                | true     | In this case: "instant_search".                                                                                                                                                                                                                                                                 |
| search_query        | true     | Search query.                                                                                                                                                                                                                                                                                   |
| locations           | false    | Comma separated list of locations IDs inside of array.                                                                                                                                                                                                                                          |
| search_scope        | false    | The whitelist of parameters separated by commas. There are two types: common parameters and subparameters for books. If empty, all common parameters are considered included by default. If there are no book subparameters in the request, the search of book parameters won't be initialized. |
| excluded_merchants* | false    | A comma-separated list of merchants. Products from these merchants will be excluded from the search results                                                                                                                                                                                     |
| excluded_brands*    | false    | A comma-separated list of brands excluded from search. If an array is empty, no brands will be excluded from search. Example: `[samsung", "hp"]`                                                                                                                                                |
| collapse            | false    | When set to `false`, products with the same `group_id` will not be collapsed into a single entry and will appear as separate items in the search results                                                                                                                                        |
| debug               | false    | Add this parameter with a value of true to activate debug mode. Requires cookie to be present in the request. Cookie value: <%= config[:js_sdk_name] %>_debug=1                                                                                                                                 |

<aside class="warning">

<p></p>
<p>*<code>excluded_merchants</code></p>
<p>The <code>excluded_merchants</code> parameter works only in conjunction with the <code>merchants</code> parameter within the <code>locations</code> field.</p>
<p>Note that if a product is associated with multiple merchants, the list of merchants in the <code>excluded_merchants</code> parameter must precisely match the list of merchants for that product. Otherwise, the parameter will not work.</p>
<p>The connection between the <code>merchants</code> and <code>excluded_merchants</code> parameters exists because a whitelist of merchants is created based on the <code>merchants</code> parameter within the <code>locations</code> field.</p>
<p>The whitelist of merchants is populated by the content of the <code>merchants</code> parameter. If this parameter is not provided, all merchants for the product will be included in the whitelist by default.</p>
<p>The <code>excluded_merchants</code> parameter then excludes merchants from this whitelist.</p>

<p></p>
<p>*<code>excluded_brands</code></p>
<p>When uploading a product, the JSON must include the <code>brand</code> field.</p>
<p>On the backend, the value from the <code>brand</code> field is automatically converted to lowercase using <code>brand_downcase</code>.</p>
<p>Therefore, brands in <code>excluded_brands</code> must be written in lowercase.</p>
<p>Be aware that brand exclusion will not work if the <code>brand</code> field was not provided in the JSON when uploading the product.</p>

</aside>

### Search_scope common parameters and the books subparameters

| Common Parameter | Description      |
|------------------|------------------|
| params           | Parameters names |
| brand            | Brand text       |
| type             | Type prefix      |
| model            | Model            |
| categories       | Category names   |
| name             | Name             |


| Books Parameter | Description           |
|-----------------|-----------------------|
| author          | Book author downcased |
| publisher       | Publisher             |
| illustrator     | Illustration text     |
| editor          | Editor                |
| series          | Series                |



### API response

| Name                   | Type              | Description                                                                                                                                                                                           |
|:-----------------------|:------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| search_query           | string            | Search query                                                                                                                                                                                          |
| categories             | array             | Array with information about categories. Each object has the following properties:                                                                                                                    |
|                        |                   | * id – category id (string)                                                                                                                                                                           |
|                        |                   | * name – category name (string)                                                                                                                                                                       |
|                        |                   | * url – category url (string)                                                                                                                                                                         |                                                                                                                   |
|                        |                   | * count – count of products in category (number)                                                                                                                                                      |
| queries                |                   | Objects with the found items:                                                                                                                                                                         |
|                        |                   | * The key is the index number of the item found through the search, and the value is an object containing the following properties:                                                                   |
|                        |                   | - key: name, value: the name of the search item (string)                                                                                                                                              |
|                        |                   | - key: url_handle, value: URL handle (string)                                                                                                                                                         |
|                        |                   | - key: url, value: full URL (string)                                                                                                                                                                  |
|                        |                   | - key: score, value: a score that used for ranking the search suggestions (float)                                                                                                                     |
| filters                | array             | Array with information about filters. Each object has the following properties:                                                                                                                       |
|                        |                   | * filter – filter object. Has the following properties:                                                                                                                                               |
|                        |                   | * count – total count of products with this parameters (number)                                                                                                                                       |
|                        |                   | * values – array of values (object). Has the following properties:                                                                                                                                    |
|                        |                   | * value – value label. (string)                                                                                                                                                                       |
|                        |                   | * count – cont of products with this parameter (number)                                                                                                                                               |
|                        |                   | * ranges - an object with the following properties:                                                                                                                                                   |
|                        |                   | - key: min, value: the minimum value of product (string)                                                                                                                                              |
|                        |                   | - key: max, value: the maximum value of product (string)                                                                                                                                              |
| html                   | string            | HTML-code of the block with products. The template is customized in the <%= config[:service_name] %> personal account.                                                                                |
| price_range            | object            | Min and max price of products. Has the following properties:                                                                                                                                          |
|                        |                   | * min – min price (number)                                                                                                                                                                            |
|                        |                   | * max – max price (number)                                                                                                                                                                            |
| products               | array             | Array with information about products. Each object has the following properties:                                                                                                                      |
|                        |                   | * description – product description (string)                                                                                                                                                          |
|                        |                   | * url – absolute product URL (string)                                                                                                                                                                 |
|                        |                   | * url_handle – relative product URL (string)                                                                                                                                                          |
|                        |                   | * picture – product's picture URL in the <%= config[:service_name] %> storage (string)                                                                                                                |
|                        |                   | * name – product name (string)                                                                                                                                                                        |
|                        |                   | * price – product price (number / int)                                                                                                                                                                |
|                        |                   | * price_full – product price (number / float)                                                                                                                                                         |
|                        |                   | * price_formatted – product price with currency (string)                                                                                                                                              |
|                        |                   | * price_full_formatted – product price with currency (string)                                                                                                                                         |
|                        |                   | * image_url - absolute product's picture URL in the <%= config[:service_name] %> storage (string)                                                                                                     |
|                        |                   | * image_url_handle - relative product's picture URL in the <%= config[:service_name] %> storage (string)                                                                                              |
|                        |                   | * image_url_resized - product image resizes url (array)                                                                                                                                               |
|                        |                   | * currency – product currency (string, corresponds to the currency of the personal account in <%= config[:service_name] %>, or a custom value specified in the shop settings in the personal account) |
|                        |                   | * id – product ID (string)                                                                                                                                                                            |
|                        |                   | * old_price – product old price (number / int, default - 0)                                                                                                                                           |
|                        |                   | * old_price_full – product old price (number / float)                                                                                                                                                 |
|                        |                   | * old_price_formatted – product old price with currency (string)                                                                                                                                      |
|                        |                   | * old_price_full_formatted – product old price with currency (string)                                                                                                                                 |
|                        |                   | * group_id - id of the group with aggregated products (string)                                                                                                                                        |
|                        |                   | * **debug** - available in debug mode only. An object containing the following fields:                                                                                                                |
|                        |                   | * matched_queries – a list of queries that matched the product (array)                                                                                                                                |
|                        |                   | * fields – internal fields from Elasticsearch (object)                                                                                                                                                |
|                        |                   | * _score – raw score provided by Elasticsearch (number)                                                                                                                                               |
|                        |                   | * _explanation – details of the score calculation (object)                                                                                                                                            |
|                        |                   | * **score** – calculated search points (object). Contains the following fields:                                                                                                                       |
|                        |                   | * search_score – number of search points (number)                                                                                                                                                     |
|                        |                   | * script_score – score calculated by the custom script, as defined in the expression field (number)                                                                                                   |
|                        |                   | * product_price_margin – `price_margin` value of the current product (number)                                                                                                                         |
|                        |                   | * price_margin_weight – weight of the price_margin in the total score, based on the “Display high-margin products” setting (number)                                                                   |
|                        |                   | * product_relative_sales_rate – `relative_sales_rate` value of the current product (number)                                                                                                           |
|                        |                   | * sales_rate_weight – weight of `relative_sales_rate`, based on the “Display popular products” setting (number)                                                                                       |
|                        |                   | * shop_weight – constant value of 50 (number)                                                                                                                                                         |
|                        |                   | * product_weight – value from `weights.LOCATION_ID`; if not passed, the value is 0 (number)                                                                                                           |
|                        |                   | * total – final score, calculated as `search_score × script_score` (number)                                                                                                                           |
|                        |                   | * expression – formula used to calculate `script_score` (string)                                                                                                                                      |
|                        |                   | Additional properties. If a parameter "extended" is passed in the request                                                                                                                             |
|                        |                   | * categories – product categories (array). Has the following properties:                                                                                                                              |
|                        |                   | * id – category id (string)                                                                                                                                                                           |
|                        |                   | * name – category name (string)                                                                                                                                                                       |
|                        |                   | * parent_id – parent category id (string)                                                                                                                                                             |
|                        |                   | * url - category url                                                                                                                                                                                  |
|                        |                   | * category_ids - product categories ids (array).                                                                                                                                                      |
| search_query_redirects | array             | Array with information about redirects. Each object has the following properties:                                                                                                                     |
|                        |                   | * query – search query (string)                                                                                                                                                                       |
|                        |                   | * redirect_link – Url for redirect (string)                                                                                                                                                           |
|                        |                   | * deep_link – Url for mobile apps (string)                                                                                                                                                            |
| products_total         | number            | Total count of products                                                                                                                                                                               |
| book_author            | array             | Reserved                                                                                                                                                                                              |
| book_editor            | array             | Reserved                                                                                                                                                                                              |
| book_publisher         | array             | Reserved                                                                                                                                                                                              |
| book_series            | array             | Reserved                                                                                                                                                                                              |
| book_illustrator       | array             | Reserved                                                                                                                                                                                              |
| book_isbn              | array             | Reserved                                                                                                                                                                                              |
| book_isbn_vars         | array             | Reserved                                                                                                                                                                                              |
| products_total         | number            | Total count of products                                                                                                                                                                               |                                                                                                                                                                                                                           |
| locations              | object of objects | A map of aggregated locations. Each key is an internal index (string), and the value is an object with:                                                                                               |
|                        |                   | * id - Matches the external_id of the location                                                                                                                                                        |
|                        |                   | * name - location name, e.g., an address                                                                                                                                                              |
|                        |                   | * type - Type of the location, for example "store". If no value was provided during import, the type will be null.                                                                                    |                                                                                                                                                                                                                 |

<aside class="notice">
Fields price_range, price_ranges, and price_median ignore products with a price of zero during aggregation.

For example, if the product prices are: 0, 10, and 100, the API response will return a minimum price of 10 instead of 0.
</aside>

<aside class="warning">

<p><code>locations</code></p>
<p>Aggregated locations will appear in the response if all of the following conditions are met:</p>
<ol>
  <li>Locations are included in the request</li>
  <li>The specified locations have child locations</li>
  <li>Products are available in the child locations</li>
</ol>

</aside>


## Full search

```javascript
/*
- did: Unique device identifier. Obtained from the SDK init method.
- shop_id: API key used for authorization.
- sid: Temporary user session ID.
- type: Request type. For full search use "full_search".
- search_query: The search query entered by the user.
- category_limit: Defines how many categories should be returned for sidebar filters.
- categories: Comma-separated list of category IDs to filter results.
- extended: When true, provides extended full search results (recommended).
- sort_by: Sorting parameter. Possible values: popular, price, discount, sales_rate, date, price_margin, rating, relevance.
- order: Sorting direction. Possible values: asc or desc (default).
- locations: List of locations to restrict search results.
- brands: List of brands to filter results.
- price_min: Minimum price filter.
- price_max: Maximum price filter.
- colors: List of colors to filter results.
- fashion_sizes: List of fashion sizes.
- exclude: List of product IDs to exclude from results.
- merchants: List of merchants to include in results.
- excluded_merchants: List of merchants to exclude. Works only with merchants in locations field.
- excluded_brands: List of brands (lowercase) to exclude. Example: ["samsung","hp"].
- filters_search_by: Defines sorting of filter options (name, quantity, popularity). Overrides global dashboard settings.
- brand_limit: Limits the number of brands returned in the response. Default: 1000.
- collapse: If false, products with the same group_id are not collapsed and appear separately.
*/

<%= config[:js_sdk_name] %>("search", {
  did: "DID",
  shop_id: "SHOP_ID",
  sid: "Session ID",
  type: "full_search",
  search_query: "shoes",
  categories: [313, 14, 40],
  category_limit: 10,
  extended: true,
  sort_by: "price",
  order: "asc",
  locations: ["Berlin", "Paris"],
  brands: ["brand", "anotherbrand"],
  price_min: 100,
  price_max: 1000,
  colors: ["black", "white"],
  fashion_sizes: ["42", "44"],
  exclude: ["PRODUCT_ID", "ANOTHER_PRODUCT_ID"],
  merchants: ["merchant1", "merchant2"],
  excluded_merchants: ["merchant3", "merchant4"],
  excluded_brands: ["theotherbrand"],
  filters_search_by: "popularity",
  brand_limit: 50,
  collapse: false
}, function(response) {
  // handle the response: for example, render full search results
}, function(error) {
  // handle the error: logging or showing a message to the user
});

```
```swift
// Basic full search
sdk.search(query: "iphone") { searchResult in
  print("Full search callback")
}

// Full search with additional parameters
sdk.search(query: "laptop", limit: nil, offset: nil, categoryLimit: nil, categories: nil, extended: nil, sortBy: nil, sortDir: nil, locations: nil, brands: nil, filters: nil, priceMin: nil, priceMax: nil, colors: nil, exclude: nil, fashion_sizes: nil) { searchResult in
  print("Full search callback")
}

/**
Search for merchants in locations.

To exclude merchants from the search results, use `excludedMerchants`.

excludedMerchants - an array of merchants to be excluded from the search results.

locations - locations where the search for merchants occurs.
**/

sdk?.search(
  query: "search-query",
  locations: "location",
  excludedMerchants: ["excluded-merchant"]
) { result in
    switch result {
    case .success(let response):
      print(response.productsTotal)
    case .failure(let error):
      print(error.description)
  }
}

sdk?.suggest(
  query: "search-query",
  locations: "location",
  excludedMerchants: ["excluded-merchant"]
) { result in
    switch result {
    case .success(let response):
      print(response.productsTotal)
    case .failure(let error):
      print(error.description)
  }


/**
Brand exclusion

To exclude brands from the search results, use `excludedBrands`.

excludedBrands – an array of brand names that should be excluded from search results.

**/

sdk?.search(
    query: "powder bronzer",
    excludedBrands: ["dior", "estee lauder"]
) { result in
    switch result {
    case .success(let response):
        print(response.productsTotal)
    case .failure(let error):
        print(error.description)
    }
}

sdk?.suggest(
    query: "powder bronzer",
    excludedBrands: ["dior", "estee lauder"]
) { result in
    switch result {
    case .success(let response):
        print(response.productsTotal)
    case .failure(let error):
        print(error.description)
    }
}
```
```kotlin
// Search with locations
val params = SearchParams()
params.put(SearchParams.Parameter.LOCATIONS, "location")

//Additional filters
val filters = SearchParams.SearchFilters()
filters.put("voltage", arrayOf("11.1", "14.8"))
params.put(SearchParams.Parameter.FILTERS, filters)
//Disable clarification search
params.put(SearchParams.Parameter.NO_CLARIFICATION, true)

// Support for FASHION_SIZES filter
filters.put("fashion_sizes", arrayOf("S", "M", "L"))
params.put(SearchParams.Parameter.FASHION_SIZES, filters)

//Full search
sdk.searchManager.searchFull("SEARCH_QUERY", params, { searchFullResponse ->
    Log.i(TAG, "Search full response: $searchFullResponse")
})

/**

 Full search with brand exclusion

query - search query value
searchParams - additional search parameters
EXCLUDED_BRANDS - a comma-separated list of brands to be excluded
onSearchFull - callback that is triggered when the full search is completed

 **/

sdk.searchManager.searchFull(
  "powder bronzer",
  searchParams = SearchParams()
    .put(SearchParams.Parameter.EXCLUDED_BRANDS, listOf("dior", "estee lauder").joinToString(",")),
  onSearchFull = {
    Log.d("FULL SEARCH EXCLUDE BRANDS", it.productsTotal.toString())
  }
)

```

```java
//Full search
SearchParams params = new SearchParams();
params.put(SearchParams.Parameter.LOCATIONS, "location");

//Additional filters
SearchParams.SearchFilters filters = new SearchParams.SearchFilters();
filters.put("voltage", new String[] {"11.1", "14.8"});
params.put(SearchParams.Parameter.FILTERS, filters);

//Disable clarification search
params.put(SearchParams.Parameter.NO_CLARIFICATION, true);
<%= config[:android_sdk_package_name]%>.search("SEARCH_QUERY", SearchParams.TYPE.FULL, params, new Api.OnApiCallbackListener() {
    @Override
    public void onSuccess(JSONObject response) {
        Log.i(TAG, "Search response: " + response.toString());
    }
});
```

```jsx
const type = 'full_search';
let search_query = 'your_search_text';
sdk.search({
  type,
  search_query,
  // other params
})
  .then((res) => {
    console.log(res);
  })
  .catch((error) => {
    console.log(error);
  });

//Full search with additional parameters filters_search_by is fully supported

sdk.search({type: 'full_search', search_query: 'string', filters_search_by: 'popularity'});

 LOG  Request: <%= config[:api] %>
{
  "headers": {"Content-Type": "application/x-www-form-urlencoded", "User-Agent": "ReactNative Android SDK v1.6.34"},
  "method": "GET",
  "params": {"did": "e0747b709b5b6467", "filters_search_by": "popularity", "seance": "MC44NjAwMD",
  "search_query": "string", "shop_id": "357382bf66ac0ce2f1722677c59511", "sid": "MC44NjAwMD", "stream": "android",
  "type": "full_search"}
}

```


### HTTP Request

`GET https://<%= config[:api_endpoint] %>/search`

### Query Parameters

| Parameter           | Required | Description                                                                                                                                                     |
|---------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|
| did                 | true     | Device ID. You get it from `init` method in SDK                                                                                                                 |
| shop_id             | true     | Your API key                                                                                                                                                    |
| sid                 | true     | Temporary user session ID                                                                                                                                       |
| type                | true     | In this case: "full_search"                                                                                                                                     |
| search_query        | true     | Search query                                                                                                                                                    |
| limit               | false    | Limit of results                                                                                                                                                |
| offset              | false    | Offset of results                                                                                                                                               |
| category_limit      | false    | How many categories for sidebar filter to return                                                                                                                |
| categories          | false    | Comma separated list of categories to filter                                                                                                                    |
| extended            | false    | It's better to use `true` for full search results                                                                                                               |
| sort_by             | false    | Sort by parameter: `popular`, `price`, `discount`, `sales_rate`, `date`, `price_margin`, `rating`, `relevance`                                                  |
| order               | false    | Sort direction: `asc` or `desc` (default)                                                                                                                       |
| locations           | false    | Comma separated list of locations IDs                                                                                                                           |
| brands              | false    | Comma separated list of brands to filter                                                                                                                        |
| filters             | false    | Optional escaped JSON string with filter parameters. For example: `{"bluetooth":["yes"],"offers":["15% cashback"],"weight":["1.6"]}`                            |
| price_min           | false    | Min price                                                                                                                                                       |
| price_max           | false    | Max price                                                                                                                                                       |
| colors              | false    | Comma separated list of colors                                                                                                                                  |
| fashion_sizes       | false    | Comma separated list of sizes                                                                                                                                   |
| exclude             | false    | Comma separated list of products IDs to exclude from search results                                                                                             |
| email               | false    | It's only for S2S integration, when service doesn't have user's session. Mobile SDK doesn't use it                                                              |
| no_clarification    | false    | Disable clarified search (true, false, default: false). Don't use it. God mode only                                                                             |
| merchants           | false    | Comma separated list of merchants                                                                                                                               |
| excluded_merchants* | false    | A comma-separated list of merchants. Products from these merchants will be excluded from the search results                                                     |
| excluded_brands*    | false    | A comma-separated list of brands excluded from search. If an array is empty, no brands will be excluded from search. Example: `["samsung", "hp"]`               |
| filters_search_by   | false    | Available options for filter: name, quantity, popularity.If this parameter in query global settings from dashboard are ignored                                  |
| brand_limit         | false    | This parameter allows limiting the number of brands aggregated in the response. The default limit is 1000                                                       |
| collapse            | false    | When set to `false`, products with the same `group_id` will not be collapsed into a single entry and will appear as separate items in the search results.       |
| debug               | false    | Add this parameter with a value of true to activate debug mode. Requires cookie to be present in the request. Cookie value: <%= config[:js_sdk_name] %>_debug=1 |


<aside class="warning">

<p></p>
<p>* <code>excluded_merchants</code></p>
<p>The <code>excluded_merchants</code> parameter works only in conjunction with the <code>merchants</code> parameter within the <code>locations</code> field.</p>
<p>Note that if a product is associated with multiple merchants, the list of merchants in the <code>excluded_merchants</code> parameter must precisely match the list of merchants for that product. Otherwise, the parameter will not work.</p>
<p>The connection between the <code>merchants</code> and <code>excluded_merchants</code> parameters exists because a whitelist of merchants is created based on the <code>merchants</code> parameter within the <code>locations</code> field.</p>
<p>The whitelist of merchants is populated by the content of the <code>merchants</code> parameter. If this parameter is not provided, all merchants for the product will be included in the whitelist by default.</p>
<p>The <code>excluded_merchants</code> parameter then excludes merchants from this whitelist.</p>

<p></p>
<p>When uploading a product, the JSON must include the <code>brand</code> field.</p>
<p>On the backend, the value from the <code>brand</code> field is automatically converted to lowercase using <code>brand_downcase</code>.</p>
<p>Therefore, brands in <code>excluded_brands</code> must be written in lowercase.</p>
<p>Be aware that brand exclusion will not work if the <code>brand</code> field was not provided in the JSON when uploading the product.</p>

</aside>

#### Sorting parameters in full search

The `sort_by` parameter defines how the search results are ordered. Below are the supported values and their descriptions:

| Value          | Description                                                                                                                                                                                         |
|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `popular`      | Sorts products based on their overall popularity. This ranking is influenced by internal metrics such as click-through rates, conversion rates, and user behavior. It is the default sorting method |
| `price`        | Sorts products by price                                                                                                                                                                             |
| `discount`     | Sorts products by the size of their discount                                                                                                                                                        |
| `sales_rate`   | Sorts by the rate at which products are sold. Higher sales velocity items are prioritized                                                                                                           |
| `date`         | Sorts products by their addition date                                                                                                                                                               |
| `price_margin` | Sorts by the product's profit margin                                                                                                                                                                |
| `rating`       | Sorts by user rating, with higher-rated products appearing first                                                                                                                                    |
| `relevance`    | Sorts by how closely a product matches the search query. It prioritizes content relevance and textual matching, and **does not** consider sales metrics or price                                    |

### API response

This table outlines the full set of fields that the API **can** return.
The actual contents of the response depend on multiple factors, including:

1. Whether the corresponding fields were included during product import
2. Whether the extended=true parameter is set
3. Whether filters are applied
4. How the request is structured overall

#### Root-Level Fields

| Name               | Type             | Description                                                                                  |
|--------------------|------------------|----------------------------------------------------------------------------------------------|
| search_query       | string           | Search query string                                                                          |
| products_total     | number           | Total number of found products                                                               |
| products           | array of objects | List of products                                                                             |
| price_range        | object           | Price range object                                                                           |
| price_ranges       | array            | List of price buckets                                                                        |
| price_median       | number           | Median product price                                                                         |
| brands             | array            | List of brands                                                                               |
| categories         | array            | List of categories                                                                           |
| collections        | array            | List of collections (present even if empty)                                                  |
| industrial_filters | object           | Industrial filters object                                                                    |
| filters            | array            | List of custom filters                                                                       |
| locations          | array of objects | Map of aggregated locations                                                                  |
| clarification      | boolean          | Indicates if clarification was applied                                                       |
| requests_count     | number           | Number of API requests in current session                                                    |
| html               | string           | HTML block for rendering products                                                            |
| book_authors       | array            | Reserved                                                                                     |
| keywords           | array            | Reserved                                                                                     |
| queries            | array            | Reserved                                                                                     |

#### Fields inside products

| Name                   | Type          | Description                                                                                  |
|------------------------|---------------|----------------------------------------------------------------------------------------------|
| id                     | string        | Product external ID                                                                          |
| _id                    | string        | Product internal ID                                                                          |
| name                   | string        | Product name                                                                                 |
| description            | string        | Product description                                                                          |
| url                    | string        | Full product URL                                                                             |
| url_handle             | string        | Relative product URL                                                                         |
| category_ids           | array[string] | List of category IDs                                                                         |
| categories             | array[object] | Array of category objects                                                                    |
| brand                  | string        | Product brand name                                                                           |
| brand_picture          | string        | URL of brand logo                                                                            |
| price                  | number        | Current product price                                                                        |
| price_full             | number        | Full product price                                                                           |
| price_formatted        | string        | Formatted price                                                                              |
| oldprice               | number        | Old price                                                                                    |
| oldprice_formatted     | string        | Formatted old price                                                                          |
| promocode              | string        | Promo code                                                                                   |
| price_with_promocode   | number        | Price after promo                                                                            |
| discount               | number        | Discount value                                                                               |
| discount_percent       | number        | Discount percent                                                                             |
| picture                | string        | Product thumbnail                                                                            |
| image_url              | string        | Full-size image URL                                                                          |
| image_url_handle       | string        | Relative path to image                                                                       |
| image_url_resized      | object        | Object with resized versions (keys = height in px, for example 120, 140, 160, ..., original) |
| stock_quantity         | number        | Quantity in stock                                                                            |
| quantity               | number        | Total quantity                                                                               |
| barcode                | string        | Product barcode                                                                              |
| model                  | string        | Product model                                                                                |
| rating                 | number        | Product rating                                                                               |
| is_new                 | boolean       | Indicates new product                                                                        |
| gift                   | boolean       | Indicates gift                                                                               |
| installment            | number        | Installment amount                                                                           |
| fashion_sizes          | array[string] | Available sizes                                                                              |
| fashion_original_sizes | array[string] | Original sizes from manufacturer                                                             |
| fashion_colors         | array[string] | Available colors                                                                             |
| fashion_feature        | string        | Style feature                                                                                |
| fashion_gender         | string        | Gender category                                                                              |
| fashion_wear_type      | string        | Wear type                                                                                    |
| params                 | array[object] | Product parameters (may be missing if no parameters exist)                                   |
| group_id               | string        | Product group ID                                                                             |
| location_ids           | array[string] | List of location IDs                                                                         |
| deeplink_android       | string        | Android deeplink                                                                             |
| deeplink_ios           | string        | iOS deeplink                                                                                 |
| sales_rate             | number        | Absolute sales rate                                                                          |
| relative_sales_rate    | number        | Relative sales popularity                                                                    |
| leftovers              | string        | Remaining stock                                                                              |
| currency               | string        | Currency symbol for product price (for example, "₽")                                         |
| debug                  | object        | Debug information object (returned only if debug=true)                                       |

#### Fields inside products.categories

| Name               | Type   | Description               |
|--------------------|--------|---------------------------|
| id                 | string | Category ID               |
| name               | string | Category name             |
| parent             | string | Parent category ID        |
| parent_id          | string | Parent ID                 |
| url                | string | Full category URL         |
| url_handle         | string | Relative category URL     |
| alias              | string | Category alias            |
| level              | string | Nesting level             |
| name_with_parent   | string | Category name with parent |
| parent_external_id | string | External ID of parent     |

#### Fields inside root categories

| Name       | Type   | Description                                 |
|------------|--------|---------------------------------------------|
| id         | string | Category ID                                 |
| name       | string | Category name                               |
| parent     | string | Parent category ID (if any)                 |
| url        | string | Full category URL                           |
| url_handle | string | Relative category URL                       |
| level      | string | Nesting level (for example, "1", "2")       |
| count      | number | Number of products in category              |

#### Fields inside products.params

| Name  | Type   | Description            |
|-------|--------|------------------------|
| name  | string | Parameter name         |
| value | string | Parameter value        |
| type  | string | Parameter type         |
| unit  | string | Unit of measure        |

#### Fields inside products.debug

| Name            | Type          | Description                              |
|-----------------|---------------|------------------------------------------|
| matched_queries | array[string] | Queries that matched the product         |
| fields          | object        | Internal Elasticsearch fields            |
| _score          | number        | Raw score from Elasticsearch             |
| _explanation    | object        | Explanation of score calculation         |
| score           | object        | Calculated score breakdown               |

#### Fields inside products.debug.score

| Name                        | Type   | Description                                           |
|-----------------------------|--------|-------------------------------------------------------|
| search_score                | number | Number of search points                               |
| script_score                | number | Score calculated by script                            |
| product_price_margin        | number | Price margin value of the current product             |
| price_margin_weight         | number | Weight of price margin in total score                 |
| product_relative_sales_rate | number | Relative sales rate of the current product            |
| sales_rate_weight           | number | Weight of relative sales rate in total score          |
| shop_weight                 | number | Constant value of 50                                  |
| product_weight              | number | Weight from weights.LOCATION_ID (or 0 if not set)     |
| total                       | number | Final score: search_score × script_score              |

#### Fields inside industrial_filters.colors

| Name  | Type   | Description                     |
|-------|--------|---------------------------------|
| color | string | Color value                     |
| count | number | Product count with this color   |

#### Fields inside industrial_filters.fashion_sizes

| Name  | Type   | Description                    |
|-------|--------|--------------------------------|
| size  | string | Size label (for example, "39") |
| count | number | Product count with this size   |

#### Fields inside filters

| Name   | Type          | Description         |
|--------|---------------|---------------------|
| filter | string        | Filter name         |
| count  | number        | Product count       |
| values | array[object] | Filter values       |

#### Fields inside filters.values

| Name  | Type   | Description                     |
|-------|--------|---------------------------------|
| value | string | Value label                     |
| count | number | Product count with this value   |

#### Fields inside locations

| Name | Type   | Description                                          |
|------|--------|------------------------------------------------------|
| id   | string | Matches the external_id of the location              |
| name | string | Human-readable location name (for example, address)  |
| type | string | Type of location (for example, "store", may be null) |


<aside class="notice">

Fields price_range, price_ranges, and price_median ignore products with a price of zero during aggregation.

For example, if the product prices are: 0, 10, and 100, the API response will return a minimum price of 10 instead of 0.

Some fields may be excluded from the response if the product does not contain relevant data (e.g., brand, fashion sizes, rating).

</aside>

<aside class="warning">

<p><code>locations</code></p>
<p>Aggregated locations will appear in the response if all of the following conditions are met:</p>
<ol>
  <li>Locations are included in the request</li>
  <li>The specified locations have child locations</li>
  <li>Products are available in the child locations</li>
</ol>

</aside>


## Search queries with zero results

This method returns a list of queries which return zero results and number of usages of this queries during previous 2 weeks.

For server-to-server integration only.

### HTTP Request

`GET https://<%= config[:api_endpoint] %>/search/no_result_queries`

```shell
curl https://<%= config[:api_endpoint] %>/search/no_result_queries?shop_id=...&shop_secret=...
```

```javascript
// No implementation. See CURL
```

```swift
// No implementation. See CURL
```

```kotlin
// No implementation. See CURL
```

```java
// No implementation. See CURL
```

> Response example

```json
[
  {
    "query": "iphone 4s",
    "quantity": 3844
  },
  {
    "contact_type": "covfefe",
    "quantity": 384491
  }
]
```

### Parameters

| Parameter   | Type   | Required | Description    |
|-------------|--------|----------|----------------|
| shop_id     | String | true     | Your API key   |
| shop_secret | String | true     | Secret API key |

### Response properties

| Parameter | Type    | Description                           |
|-----------|---------|---------------------------------------|
| query     | String  | Search query value                    |
|  quantity | Integer | Number of query usages during 2 weeks |






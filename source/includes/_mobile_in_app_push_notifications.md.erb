# In App Notifications

This document provides detailed guidelines for integrating and configuring in-app notifications for Android and iOS platforms.

To configure in-app notifications, follow a two-step process:

1. SDK Initialization
2. Alert Management (programmatic or via admin panel)


## iOS

For iOS you'll need to add `parentViewController` as an optional parameter during SDK initialization.

### SDK initialization

```swift
/*
SDK initialization example with parentViewController

parentViewController - parameter required for alerts

stream - parameter is required if you are going to use alrts

*/

// 1. Initialize SDK
let sdk = createPersonalizationSDK(
  shopId: "YOUR_SHOP_ID",
  apiDomain: "https://api.your-domain.com",
  parentViewController: rootViewController, // Required for alerts
  stream: "ios", // Mandatory if using alerts
  onError: { error in
    print("Initialization error: \(error.localizedDescription)")
  }
)

// 2. Access Notification Widget
guard let notificationWidget = sdk.getNotificationWidget() else {
  print("Notification widget not available")
  return
}

/*

Alert managment in iOS SDK

titleText - required
messageText - required
imageUrl - optional
confirmButtonText - optional
dismissButtonText - optional

*/

// Top
notificationWidget?.showTopDialog(
  titleText: "title",
  messageText: "message",
  imageUrl: "image url",
  confirmButtonText: "custom confirm button text",
  dismissButtonText: "custom dismiss button text",
  onConfirmButtonClick: {
  print("confirm clicked")
  }
)

// Center
notificationWidget?.showAlert(
  titleText: "title",
  messageText: "message",
  imageUrl: "image url",
  confirmButtonText: "custom confirm button text",
  dismissButtonText: "custom dismiss button text",
  onConfirmButtonClick: {
  print("confirm clicked")
  }
)
// Bottom
notificationWidget?.showBottomDialog(
  titleText: "title",
  messageText: "message",
  imageUrl: "image url",
  confirmButtonText: "custom confirm button text",
  dismissButtonText: "custom dismiss button text",
  onConfirmButtonClick: {
  print("confirm clicked")
  }
)

```

### initialization parameters for iOS

| Parameter            | Category    | Description                                                                                                     |
|----------------------|-------------|-----------------------------------------------------------------------------------------------------------------|
| shopId               | required    | Your shop ID                                                                                                    |
| apiDomain            | required    | API endpoint for URL request creation                                                                           |
| parentViewController | optional    | This parameter must be provided if you want to enable alerts                                                    |
| stream               | conditional | Platform specific value "ios" must be passed if alerts are enabled (parentViewController parameter is provided) |

### Alert management

| Parameter         | Category | Description              |
|-------------------|----------|--------------------------|
| titleText         | required | Alert title              |
| messageText       | required | Message body             |
| imageUrl          | optional | Image link               |
| confirmButtonText | optional | Confirmation button text |
| dismissButtonText | optional | Dismissal button text    |


## Android

Initialize the SDK **before** using any alert functionality.

### SDK initialization and alert management

To enable alerts in your Android App you'll have to initialize `fragmentManager` separately.

Supported Alert Types:

1. Centered dialog
2. Bottom sheet
3. Full-screen modal

```kotlin

// 1. Basic SDK Initialization
sdk.initialize(
  context = applicationContext,
  shopId = "YOUR_SHOP_ID"
)

// 2. FragmentManager Initialization (required for alerts)
sdk.initializeFragmentManager(
  fragmentManager = supportFragmentManager,
  stream = "android" // Mandatory for alerts
)

```

### initialization parameters for Android

| Parameter | Category    | Description                                                                             |
|-----------|-------------|-----------------------------------------------------------------------------------------|
| shopId    | required    | Your shop ID                                                                            |
| context   | required    | The part that provides access to the core resources of your App                         |
| stream    | conditional | Platform specific value "android" must be passed if the fragmentManager was initialized |

The `fragmentManager` must be initialized separately if you want to enable alerts.


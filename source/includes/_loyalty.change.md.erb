## Change order

> Headers

```
Content-type: application/json
```

> Body example

```json
{
    "shop_id":         "...",
    "shop_secret":     "...",
    "order_id":        "...",
    "identifier":      "...",
    "cart_items": [
      {"product_id": "...", "price": 1000, "quantity": 4},
      {"product_id": "...", "price": 2000, "quantity": 1}
    ]
}
```

> Request example

```shell
curl --header "Content-Type: application/json" \
  --request POST \
  --data-binary "@data.json" \
  https://<%= config[:api_endpoint] %>/loyalty/checkout/change
```

```javascript
// S2S only
```
```swift
// S2S only
```
```java
// S2S only
```
```kotlin
// S2S only
```
```jsx
// S2S only
```

> The above command returns JSON structured like this:

```json
{
  "success": true,
  "payload": {
    "order_id": "...",
    "identifier": "...",
    "payment_type": "...",
    "products_total": 5,
    "order_total": 6000,
    "order_total_change": -300,   // How order value changed: negative for refund, positive for extra charge
    "saved_total": 1000,
    "saved_by_discounts": 400,
    "saved_by_bonuses": 600,
    "saved_by_offers": 0,
    "order_to_pay": 5000,
    "order_bonuses_to_charge": 500,
    "bonuses_balance": 1000,
    "bonuses_reward": 500,
    "bonuses_referrer_reward": 0,
    "referrer_identifier": "...",
    "referral_program": 21,
    "applied_promotions": [],
    "rewarded_stickers": {},
    "used_stickers": {},
    "stickers_balance": {},
    "promo_codes": [],
    "promo_codes_failed": [],
    "items": [
       {
        "uniqid": "...",
        "quantity": 4,
        "price": 1000,
        "total": 4000,
        "discountable": true,
        "bonusable": true,
        "rewardable": true,
        "paid_with_offers": 0,
        "paid_with_offers_per_product": 0,
        "paid_with_referral_discounts": 0,
        "paid_with_referral_discounts_per_product": 0,
        "paid_with_discounts": 500,
        "paid_with_discounts_per_product": 100,
        "paid_with_bonuses": 500,
        "paid_with_bonuses_per_product": 100,
        "bonuses_reward": 400,
        "bonuses_reward_per_product": 100,
        "bonuses_reward_loyalty_program": {
          "total": 40,
          "per_product": 10
        },
        "bonuses_reward_referral_program": {
          "total": 80,
          "per_product": 20
        },
        "bonuses_reward_promotions": {
          "33": { "total": 100, "per_product": 25 },
          "17": { "total": 180, "per_product": 45 }
        },
        "bonuses_used": 500,
        "bonuses_used_per_product": 125,
        "total_after_discounts": 3500,
        "total_after_discounts_per_product": 875
      },
      ...
    ]
  }
}

```

### HTTP Request

`POST https://<%= config[:api_endpoint] %>/loyalty/checkout/change`

When client partially returns some products from an order, it's needed to recalculate money and bonuses used in the order and make money/bonuses refund.

Send an updated list of client's cart to refund bonuses and calculate how much money to refund.

Specifics:

1. Recalculates the order in case of product returns or replacements
2. Adjusts money and bonuses, including possible refunds
3. Returns the delta (negative for refund, positive for extra payment)
